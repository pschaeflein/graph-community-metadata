{
  "openapi": "3.0.0",
  "info": {
    "title": "Graph.Community SDK for Microsoft SharePoint REST API",
    "version": "5.3.0",
    "x-logo": {
      "url": "https://github.com/pschaeflein/graph-community-spclient/blob/d67333d3262935432c4d30e64c8257d326d98ac1/lib/graph-community.png",
      "backgroundColor": "#FFFFFF",
      "altText": "Graph.Community SDK for Microsoft SharePoint REST API"
    }
  },
  "tags": [
    {
      "name": "Web"
    },
    {
      "name": "Hub sites"
    },
    {
      "name": "Lists"
    },
    {
      "name": "Site Pages"
    }
  ],
  "paths": {
    "/{serverRelativeSiteUrl}/_api/HubSites": {
      "get": {
        "operationId": "GetHubSites",
        "description": "Gets information about all hub sites that the current user can access.",
        "parameters": [
          {
            "$ref": "#/components/parameters/CommonParameters.odataVersion"
          },
          {
            "$ref": "#/components/parameters/CommonParameters.serverRelativeSiteUrl"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "value"
                  ],
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/HubSite"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Hub sites"
        ]
      }
    },
    "/{serverRelativeSiteUrl}/_api/SitePages": {
      "get": {
        "operationId": "GetSitePages",
        "parameters": [
          {
            "$ref": "#/components/parameters/ODataSelectParameter"
          },
          {
            "$ref": "#/components/parameters/CommonParameters.odataVersion"
          },
          {
            "$ref": "#/components/parameters/CommonParameters.serverRelativeSiteUrl"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "value"
                  ],
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SitePage"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Site Pages"
        ]
      }
    },
    "/{serverRelativeSiteUrl}/_api/SitePages/{id}": {
      "get": {
        "operationId": "GetSitePage",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "$ref": "#/components/parameters/ODataSelectParameter"
          },
          {
            "$ref": "#/components/parameters/ODataExpandParameter"
          },
          {
            "$ref": "#/components/parameters/CommonParameters.odataVersion"
          },
          {
            "$ref": "#/components/parameters/CommonParameters.serverRelativeSiteUrl"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SitePage"
                }
              }
            }
          }
        },
        "tags": [
          "Site Pages"
        ]
      }
    },
    "/{serverRelativeSiteUrl}/_api/web": {
      "get": {
        "operationId": "GetWeb",
        "parameters": [
          {
            "$ref": "#/components/parameters/CommonParameters.odataVersion"
          },
          {
            "$ref": "#/components/parameters/CommonParameters.serverRelativeSiteUrl"
          },
          {
            "$ref": "#/components/parameters/ODataSelectParameter"
          },
          {
            "$ref": "#/components/parameters/ODataExpandParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Web"
                }
              }
            }
          }
        },
        "tags": [
          "Web"
        ]
      }
    },
    "/{serverRelativeSiteUrl}/_api/web/GetFileById('{id}')": {
      "get": {
        "operationId": "GetFileById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The Id of the file.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "$ref": "#/components/parameters/CommonParameters.odataVersion"
          },
          {
            "$ref": "#/components/parameters/CommonParameters.serverRelativeSiteUrl"
          },
          {
            "$ref": "#/components/parameters/ODataSelectParameter"
          },
          {
            "$ref": "#/components/parameters/ODataExpandParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/File"
                }
              }
            }
          }
        },
        "tags": [
          "Web"
        ]
      }
    },
    "/{serverRelativeSiteUrl}/_api/web/GetFileByServerRelativePath(DecodedUrl=@path)": {
      "get": {
        "operationId": "GetFileByServerRelativePath",
        "parameters": [
          {
            "name": "@path",
            "in": "query",
            "required": true,
            "description": "Server-relative path to the file.",
            "schema": {
              "type": "string"
            },
            "explode": false
          },
          {
            "$ref": "#/components/parameters/ODataSelectParameter"
          },
          {
            "$ref": "#/components/parameters/ODataExpandParameter"
          },
          {
            "$ref": "#/components/parameters/CommonParameters.odataVersion"
          },
          {
            "$ref": "#/components/parameters/CommonParameters.serverRelativeSiteUrl"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/File"
                }
              }
            }
          }
        },
        "tags": [
          "Web"
        ]
      }
    },
    "/{serverRelativeSiteUrl}/_api/web/lists": {
      "get": {
        "operationId": "GetLists",
        "description": "Returns basic information about all lists in the site. (To get complete information, use the Microsoft Graph endpoint.)",
        "parameters": [
          {
            "$ref": "#/components/parameters/CommonParameters.odataVersion"
          },
          {
            "$ref": "#/components/parameters/CommonParameters.serverRelativeSiteUrl"
          },
          {
            "$ref": "#/components/parameters/ODataSelectParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "value"
                  ],
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/List"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Lists"
        ]
      }
    },
    "/{serverRelativeSiteUrl}/_api/web/lists/{id}": {
      "get": {
        "operationId": "GetList",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The Id of the list.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "$ref": "#/components/parameters/ODataSelectParameter"
          },
          {
            "$ref": "#/components/parameters/ODataExpandParameter"
          },
          {
            "$ref": "#/components/parameters/CommonParameters.odataVersion"
          },
          {
            "$ref": "#/components/parameters/CommonParameters.serverRelativeSiteUrl"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/List"
                }
              }
            }
          }
        },
        "tags": [
          "Lists"
        ]
      }
    }
  },
  "components": {
    "parameters": {
      "CommonParameters.odataVersion": {
        "name": "odata-version",
        "in": "header",
        "required": true,
        "description": "OData version. (Added automatically by the Graph.Community.SPClient SDK.)",
        "schema": {
          "type": "string",
          "enum": [
            "4.0"
          ]
        }
      },
      "CommonParameters.serverRelativeSiteUrl": {
        "name": "serverRelativeSiteUrl",
        "in": "path",
        "required": true,
        "description": "The server-relative URL of the site.",
        "schema": {
          "type": "string"
        }
      },
      "ODataExpandParameter": {
        "name": "$expand",
        "in": "query",
        "required": false,
        "description": "OData system query option $expand.",
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "explode": false
      },
      "ODataSelectParameter": {
        "name": "$select",
        "in": "query",
        "required": false,
        "description": "OData system query option $select.",
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "explode": false
      }
    },
    "schemas": {
      "ChangeToken": {
        "type": "object",
        "properties": {
          "StringValue": {
            "type": "string"
          }
        }
      },
      "File": {
        "type": "object",
        "required": [
          "CheckedOutByUser",
          "CheckInComment",
          "CheckOutType",
          "CustomizedPageStatus",
          "Exists",
          "Level",
          "LockedByUser",
          "MajorVersion",
          "MinorVersion",
          "Name",
          "ServerRelativeUrl",
          "TimeCreated",
          "TimeLastModified",
          "Title",
          "UIVersionLabel",
          "UniqueId"
        ],
        "properties": {
          "CheckedOutByUser": {
            "$ref": "#/components/schemas/User"
          },
          "CheckInComment": {
            "type": "string"
          },
          "CheckOutType": {
            "type": "integer",
            "format": "int32",
            "description": "A value that indicates how the file is checked out of a document library. Represents an SP.CheckOutType value: Online = 0; Offline = 1; None = 2."
          },
          "CustomizedPageStatus": {
            "type": "integer",
            "format": "int32",
            "description": "A value that specifies the customization status of the file. Represents an SP.CustomizedPageStatus value: None = 0; Uncustomized = 1; Customized = 2"
          },
          "Exists": {
            "type": "boolean"
          },
          "Level": {
            "type": "integer",
            "format": "int32",
            "description": "A value that specifies the publishing level of the file. Represents an SP.FileLevel value: Published = 1; Draft = 2; Checkout = 255."
          },
          "LockedByUser": {
            "$ref": "#/components/schemas/User"
          },
          "MajorVersion": {
            "type": "integer",
            "format": "int32"
          },
          "MinorVersion": {
            "type": "integer",
            "format": "int32"
          },
          "Name": {
            "type": "string"
          },
          "ServerRelativeUrl": {
            "type": "string"
          },
          "TimeCreated": {
            "type": "string",
            "format": "date-time"
          },
          "TimeLastModified": {
            "type": "string",
            "format": "date-time"
          },
          "Title": {
            "type": "string"
          },
          "UIVersionLabel": {
            "type": "string"
          },
          "UniqueId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "description": "Basic information about a file.\n(To get complete information, use the Microsoft Graph endpoint.)"
      },
      "Form": {
        "type": "object",
        "required": [
          "Id",
          "FormType",
          "ServerRelativeUrl"
        ],
        "properties": {
          "Id": {
            "type": "string"
          },
          "FormType": {
            "type": "integer",
            "format": "int32",
            "description": "Invalid = -1,\nDefaultView = 0,\nNormalView = 1,\nDialogView = 2,\nView = 3,\nDisplayForm = 4,\nDisplayFormDialog = 5,\nEditForm = 6,\nEditFormDialog = 7,\nNewForm = 8,\nNewFormDialog = 9,\nSolutionForm = 10,\nPAGE_MAXITEMS = 11"
          },
          "ServerRelativeUrl": {
            "type": "string"
          }
        }
      },
      "Group": {
        "type": "object",
        "required": [
          "@odata.type",
          "AllowMembersEditMembership",
          "AllowRequestToJoinLeave",
          "AutoAcceptRequestToJoinLeave",
          "Description",
          "OnlyAllowMembersViewMembership",
          "OwnerTitle",
          "RequestToJoinLeaveEmailSetting",
          "Users"
        ],
        "properties": {
          "@odata.type": {
            "type": "string",
            "enum": [
              "#SP.Group"
            ]
          },
          "AllowMembersEditMembership": {
            "type": "boolean",
            "description": "Whether group members can modify membership in the group."
          },
          "AllowRequestToJoinLeave": {
            "type": "boolean",
            "description": "Whether to allow users to request membership in the group and to allow users to request to leave the group."
          },
          "AutoAcceptRequestToJoinLeave": {
            "type": "boolean",
            "description": "Whether users are automatically added or removed when they make a request."
          },
          "Description": {
            "type": "string",
            "description": "Description for the group."
          },
          "OnlyAllowMembersViewMembership": {
            "type": "boolean",
            "description": "Whether only group members are allowed to view the list of members in the group."
          },
          "Owner": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Principal"
              }
            ],
            "description": "The owner for the group, which can be a user or another group."
          },
          "OwnerTitle": {
            "type": "string",
            "description": "The name for the owner of this group"
          },
          "RequestToJoinLeaveEmailSetting": {
            "type": "string",
            "description": "The e-mail address to which membership requests are sent."
          },
          "Users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Principal"
          }
        ]
      },
      "HubSite": {
        "type": "object",
        "required": [
          "ID",
          "SiteId",
          "TenantInstanceId",
          "Targets"
        ],
        "properties": {
          "ID": {
            "type": "string",
            "format": "uuid",
            "description": "Identifies the hub site."
          },
          "Title": {
            "type": "string",
            "description": "The display name of the hub site."
          },
          "SiteId": {
            "type": "string",
            "format": "uuid",
            "description": "ID of the hub parent site."
          },
          "TenantInstanceId": {
            "type": "string",
            "format": "uuid",
            "description": "The tenant instance ID in which the hub site is located. Use empty GUID for the default tenant instance."
          },
          "SiteUrl": {
            "type": "string",
            "description": "URL of the hub parent site."
          },
          "LogoUrl": {
            "type": "string",
            "description": "The URL of a logo to use in the hub site navigation."
          },
          "Description": {
            "type": "string",
            "description": "A description of the hub site."
          },
          "Targets": {
            "type": "string",
            "description": "List of security groups with access to join the hub site. Null if everyone has permission."
          }
        }
      },
      "List": {
        "type": "object",
        "required": [
          "Id"
        ],
        "properties": {
          "Id": {
            "type": "string",
            "format": "uuid",
            "description": "The GUID that identifies the list in the database."
          },
          "Title": {
            "type": "string",
            "description": "The displayed title for the list."
          },
          "BaseTemplate": {
            "type": "integer",
            "format": "int32",
            "description": "The list definition type on which the list is based."
          },
          "Forms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Form"
            }
          }
        },
        "description": "Basic information about a list.\n(To get complete information, use the Microsoft Graph endpoint.)"
      },
      "Principal": {
        "type": "object",
        "required": [
          "@odata.type"
        ],
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32",
            "description": "The member identifier for the user or group."
          },
          "IsHiddenInUI": {
            "type": "boolean",
            "description": "Whether this member should be hidden in the UI."
          },
          "PrincipalType": {
            "type": "integer",
            "format": "int32",
            "description": "A bitwise value containing the type of the principal (SP.PrincipalType):\nNone = 0\nUser = 1\nDistributionList = 2\nSecurityGroup = 4\nSharePointGroup = 8\nAll = 15"
          },
          "LoginName": {
            "type": "string",
            "description": "The login name of the user."
          },
          "Title": {
            "type": "string",
            "description": "The name of the principal."
          },
          "@odata.type": {
            "type": "string",
            "description": "Discriminator property for Principal."
          }
        },
        "discriminator": {
          "propertyName": "@odata.type",
          "mapping": {
            "#SP.Group": "#/components/schemas/Group",
            "#SP.User": "#/components/schemas/User"
          }
        }
      },
      "PublishingUserInfo": {
        "type": "object",
        "required": [
          "AccountName",
          "Acronym",
          "Color",
          "Name"
        ],
        "properties": {
          "AccountName": {
            "type": "string"
          },
          "Acronym": {
            "type": "string"
          },
          "Color": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          }
        }
      },
      "RegionalSettings": {
        "type": "object",
        "required": [
          "AdjustHijriDays",
          "AlternateCalendarType",
          "AM",
          "CalendarType",
          "Collation",
          "CollationLCID",
          "DateFormat",
          "DateSeparator",
          "DecimalSeparator",
          "DigitGrouping",
          "FirstDayOfWeek",
          "FirstWeekOfYear",
          "IsEastAsia",
          "IsRightToLeft",
          "IsUIRightToLeft",
          "ListSeparator",
          "LocaleId",
          "NegativeSign",
          "NegNumberMode",
          "PM",
          "PositiveSign",
          "ShowWeeks",
          "ThousandSeparator",
          "Time24",
          "TimeMarkerPosition",
          "TimeSeparator",
          "TimeZone",
          "WorkDayEndHour",
          "WorkDays",
          "WorkDayStartHour"
        ],
        "properties": {
          "AdjustHijriDays": {
            "type": "integer",
            "format": "int16"
          },
          "AlternateCalendarType": {
            "type": "integer",
            "format": "int16"
          },
          "AM": {
            "type": "string",
            "description": "The string that is used to represent A.M. on the server."
          },
          "CalendarType": {
            "type": "integer",
            "format": "int16"
          },
          "Collation": {
            "type": "integer",
            "format": "int16"
          },
          "CollationLCID": {
            "type": "integer",
            "format": "int32"
          },
          "DateFormat": {
            "type": "integer",
            "format": "int32"
          },
          "DateSeparator": {
            "type": "string"
          },
          "DecimalSeparator": {
            "type": "string"
          },
          "DigitGrouping": {
            "type": "string"
          },
          "FirstDayOfWeek": {
            "type": "integer",
            "format": "int32",
            "description": "The first day of the week. 0 = Sunday"
          },
          "FirstWeekOfYear": {
            "type": "integer",
            "format": "int16"
          },
          "IsEastAsia": {
            "type": "boolean"
          },
          "IsRightToLeft": {
            "type": "boolean"
          },
          "IsUIRightToLeft": {
            "type": "boolean"
          },
          "ListSeparator": {
            "type": "string"
          },
          "LocaleId": {
            "type": "integer",
            "format": "int32"
          },
          "NegativeSign": {
            "type": "string"
          },
          "NegNumberMode": {
            "type": "integer",
            "format": "int32"
          },
          "PM": {
            "type": "string",
            "description": "The string that is used to represent P.M. on the server."
          },
          "PositiveSign": {
            "type": "string"
          },
          "ShowWeeks": {
            "type": "boolean"
          },
          "ThousandSeparator": {
            "type": "string"
          },
          "Time24": {
            "type": "boolean"
          },
          "TimeMarkerPosition": {
            "type": "integer",
            "format": "int32"
          },
          "TimeSeparator": {
            "type": "string"
          },
          "TimeZone": {
            "$ref": "#/components/schemas/TimeZone"
          },
          "WorkDayEndHour": {
            "type": "integer",
            "format": "int16"
          },
          "WorkDays": {
            "type": "integer",
            "format": "int16"
          },
          "WorkDayStartHour": {
            "type": "integer",
            "format": "int16"
          }
        }
      },
      "SitePage": {
        "type": "object",
        "required": [
          "Id",
          "PromotedState",
          "IsWebWelcomePage",
          "CreatedBy",
          "LastModifiedBy"
        ],
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Title": {
            "type": "string"
          },
          "Description": {
            "type": "string"
          },
          "PromotedState": {
            "type": "integer",
            "format": "int32",
            "description": "Promoted state:\nNotPromoted = 0,\nPromoteOnPublish = 1,\nPromoted = 2"
          },
          "FirstPublished": {
            "type": "string",
            "format": "date-time"
          },
          "Modified": {
            "type": "string",
            "format": "date-time"
          },
          "FileName": {
            "type": "string"
          },
          "AbsoluteUrl": {
            "type": "string"
          },
          "BannerImageUrl": {
            "type": "string"
          },
          "BannerThumbnailUrl": {
            "type": "string"
          },
          "Url": {
            "type": "string",
            "description": "Site-relative Url"
          },
          "UniqueId": {
            "type": "string",
            "format": "uuid"
          },
          "ContentTypeId": {
            "type": "string"
          },
          "IsWebWelcomePage": {
            "type": "boolean"
          },
          "PageLayoutType": {
            "type": "string"
          },
          "CreatedBy": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PublishingUserInfo"
              }
            ],
            "description": "Created by user information."
          },
          "LastModifiedBy": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PublishingUserInfo"
              }
            ],
            "description": "Last modified by user information."
          }
        }
      },
      "TimeZone": {
        "type": "object",
        "required": [
          "Description",
          "Id",
          "Information"
        ],
        "properties": {
          "Description": {
            "type": "string"
          },
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Information": {
            "$ref": "#/components/schemas/TimeZoneInformation"
          }
        }
      },
      "TimeZoneInformation": {
        "type": "object",
        "required": [
          "Bias",
          "DaylightBias",
          "StandardBias"
        ],
        "properties": {
          "Bias": {
            "type": "integer",
            "format": "int32"
          },
          "DaylightBias": {
            "type": "integer",
            "format": "int32"
          },
          "StandardBias": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "User": {
        "type": "object",
        "required": [
          "@odata.type",
          "IsSiteAdmin",
          "IsEmailAuthenticationGuestUser",
          "IsShareByEmailGuestUser"
        ],
        "properties": {
          "@odata.type": {
            "type": "string",
            "enum": [
              "#SP.User"
            ]
          },
          "Email": {
            "type": "string",
            "description": "The e-mail address of the user."
          },
          "IsSiteAdmin": {
            "type": "boolean",
            "description": "Whether the user is a site collection administrator."
          },
          "IsEmailAuthenticationGuestUser": {
            "type": "boolean",
            "description": "IsEmailAuthenticationGuestUser"
          },
          "IsShareByEmailGuestUser": {
            "type": "boolean",
            "description": "IsShareByEmailGuestUser"
          },
          "UserPrincipalName": {
            "type": "string",
            "description": "UserPrincipalName"
          },
          "UserId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UserId"
              }
            ],
            "description": "The user's name identifier and the issuer of the user's name identifier."
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Principal"
          }
        ]
      },
      "UserCustomAction": {
        "type": "object",
        "required": [
          "ClientSideComponentId",
          "Id",
          "RegistrationType",
          "Scope",
          "Sequence"
        ],
        "properties": {
          "ClientSideComponentId": {
            "type": "string",
            "format": "uuid"
          },
          "ClientSideComponentProperties": {
            "type": "string"
          },
          "CommandUIExtension": {
            "type": "string",
            "description": "A value that specifies an implementation specific XML fragment that determines user interface properties of the custom action."
          },
          "Description": {
            "type": "string",
            "description": "The description of the custom action."
          },
          "Group": {
            "type": "string",
            "description": "A value that specifies an implementation-specific value that determines the position of the custom action in the page."
          },
          "HostProperties": {
            "type": "string"
          },
          "Id": {
            "type": "string",
            "format": "uuid",
            "description": "The identifier of the custom action."
          },
          "ImageUrl": {
            "type": "string",
            "description": "The URL of the image associated with the custom action."
          },
          "Location": {
            "type": "string",
            "description": "The location of the custom action."
          },
          "Name": {
            "type": "string",
            "description": "The name of the custom action."
          },
          "RegistrationId": {
            "type": "string",
            "description": "The value that specifies the identifier of the object associated with the custom action."
          },
          "RegistrationType": {
            "type": "integer",
            "format": "int32",
            "description": "The value that specifies the type of object associated with the custom action.\n\nNone:0,\nList:1,\nContentType:2,\nProgId:3,\nFileType:4,"
          },
          "Scope": {
            "type": "integer",
            "format": "int32",
            "description": "A value that specifies the scope of the custom action.\n- Unknown = 0,\n- Site = 2,\n- Web = 3,\n- List = 4,"
          },
          "ScriptBlock": {
            "type": "string",
            "description": "The value that specifies the ECMAScript to be executed when the custom action is performed."
          },
          "ScriptSrc": {
            "type": "string",
            "description": "A value that specifies the URI of a file which contains the ECMAScript to execute on the page."
          },
          "Sequence": {
            "type": "integer",
            "format": "int32",
            "description": "The value that specifies an implementation-specific value that determines the order of the custom action that appears on the page."
          },
          "Title": {
            "type": "string",
            "description": "The display title of the custom action."
          },
          "Url": {
            "type": "string",
            "description": "The URL, URI, or ECMAScript (JScript, JavaScript) function associated with the action."
          },
          "VersionOfUserCustomAction": {
            "type": "string",
            "description": "A value that specifies an implementation specific version identifier."
          }
        }
      },
      "UserId": {
        "type": "object",
        "properties": {
          "NameId": {
            "type": "string",
            "description": "The user's name identifier."
          },
          "NameIdIssuer": {
            "type": "string",
            "description": "The issuer of the user's name identifier"
          }
        }
      },
      "Web": {
        "type": "object",
        "required": [
          "Id",
          "Title",
          "FooterLayout",
          "WelcomePage",
          "SiteUsers",
          "UserCustomActions"
        ],
        "properties": {
          "Id": {
            "type": "string",
            "description": "The site identifier for the site."
          },
          "Title": {
            "type": "string",
            "description": "The title for the website."
          },
          "CurrentChangeToken": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChangeToken"
              }
            ],
            "description": "Represents the unique sequential location of a change within the change log."
          },
          "FooterEnabled": {
            "type": "boolean"
          },
          "FooterLayout": {
            "type": "integer",
            "format": "int32",
            "description": "Footer layout type:\nSimple = 0,\nExtended = 1,\nStacked = 2"
          },
          "AssociatedMemberGroup": {
            "$ref": "#/components/schemas/Group"
          },
          "AssociatedOwnerGroup": {
            "$ref": "#/components/schemas/Group"
          },
          "AssociatedVisitorGroup": {
            "$ref": "#/components/schemas/Group"
          },
          "WelcomePage": {
            "type": "string"
          },
          "RegionalSettings": {
            "$ref": "#/components/schemas/RegionalSettings"
          },
          "SiteUsers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          },
          "UserCustomActions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserCustomAction"
            }
          }
        }
      }
    }
  }
}